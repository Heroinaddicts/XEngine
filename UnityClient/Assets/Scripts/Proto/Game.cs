// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: game.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from game.proto</summary>
public static partial class GameReflection {

  #region Descriptor
  /// <summary>File descriptor for game.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GameReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpnYW1lLnByb3RvGgpkYXRhLnByb3RvIgkKB29OdWxsZXIiJgoKb0dBVEVf",
          "SU5GTxIKCgJpcBgBIAEoCRIMCgRwb3J0GAIgASgFIh0KCm9MT0dJTl9SRVES",
          "DwoHYWNjb3VudBgBIAEoAyI0CgpvTE9HSU5fQVNXEhUKBGNvZGUYASABKA4y",
          "By5lRXJyb3ISDwoHYWNjb3VudBgCIAEoAyIgCgdvTE9HT1VUEhUKBGNvZGUY",
          "ASABKA4yBy5lRXJyb3IiKwoIb1ZlY3RvcjMSCQoBeBgBIAEoAhIJCgF5GAIg",
          "ASgCEgkKAXoYAyABKAIiKwoKb1NjZW5lSW5mbxIKCgJpZBgBIAEoAxIRCglj",
          "b25maWdfaWQYAiABKAUiOwoRb0FUVFJCVVRFX0NIQU5HRUQSCwoDZ2lkGAEg",
          "ASgDEhkKBGF0dHIYAiADKAsyCy5vQXR0cmlidXRlIigKC29TQ0VORV9JTkZP",
          "EhkKBGluZm8YASABKAsyCy5vU2NlbmVJbmZvIngKB29PYmplY3QSCwoDZ2lk",
          "GAEgASgDEhEKCWNvbmZpZ19pZBgCIAEoBRIaCgR0eXBlGAMgASgOMgwuZU9i",
          "amVjdFR5cGUSFgoDcG9zGAQgASgLMgkub1ZlY3RvcjMSGQoEYXR0cxgFIAMo",
          "CzILLm9BdHRyaWJ1dGUiKgoNb09CSkVDVF9BUFBFUhIZCgdvYmplY3RzGAEg",
          "AygLMggub09iamVjdCImChBvT0JKRUNUX0RJU0FQUEVSEhIKCm9iamVjdF9p",
          "ZHMYASADKAMiTwoJb01vdmVJbmZvEiEKDnN0YXJ0X3Bvc2l0aW9uGAEgASgL",
          "Mgkub1ZlY3RvcjMSHwoMZW5kX3Bvc2l0aW9uGAIgASgLMgkub1ZlY3RvcjMi",
          "dwoPb1NUQVRVU19DSEFOR0VEEgsKA2dpZBgBIAEoAxIgCgVzdGF0ZRgCIAEo",
          "DjIRLmVDaGFyYWN0b3JTdGF0dXMSFgoDcG9zGAMgASgLMgkub1ZlY3RvcjMS",
          "HQoJbW92ZV9pbmZvGAQgASgLMgoub01vdmVJbmZvIkIKDG9QTEFZRVJfTU9W",
          "RRILCgNnaWQYASABKAMSDQoFYW5nbGUYAiABKAISFgoDcG9zGAMgASgLMgku",
          "b1ZlY3RvcjMiQgoMb1BMQVlFUl9TVE9QEgsKA2dpZBgBIAEoAxINCgVhbmds",
          "ZRgCIAEoAhIWCgNwb3MYAyABKAsyCS5vVmVjdG9yMyJSChZvQlJPQURDQVNU",
          "X1BMQVlFUl9NT1ZFEgsKA2dpZBgBIAEoAxINCgVhbmdsZRgCIAEoAhIcCglz",
          "dGFydF9wb3MYAyABKAsyCS5vVmVjdG9yMyJSChZvQlJPQURDQVNUX1BMQVlF",
          "Ul9TVE9QEgsKA2dpZBgBIAEoAxINCgVhbmdsZRgCIAEoAhIcCglzdGFydF9w",
          "b3MYAyABKAsyCS5vVmVjdG9yMyJwCgpvUGxheWVySGl0EgsKA2dpZBgBIAEo",
          "AxIZCgZoaXRQb3MYAiABKAsyCS5vVmVjdG9yMxIcCgloaXROb3JtYWwYAyAB",
          "KAsyCS5vVmVjdG9yMxIcCghoaXRMYXllchgEIAEoDjIKLmVIaXRMYXllciIr",
          "CgtvUExBWUVSX0hJVBIcCgdoaXRJbmZvGAEgASgLMgsub1BsYXllckhpdCJc",
          "ChVvQlJPQURDQVNUX1BMQVlFUl9ISVQSFQoNY2hhcmFjdG9yX2dpZBgBIAEo",
          "AxIcCgdoaXRJbmZvGAIgASgLMgsub1BsYXllckhpdBIOCgZkYW1hZ2UYAyAB",
          "KAIqOQoGZUVycm9yEhEKDXVua25vd25fZXJyb3IQABILCgdzdWNjZXNzEAES",
          "DwoLb3RoZXJfbG9naW4QAipdCgVlQ1BJRBIPCgtOT1RfVVNFX0NJRBAAEg4K",
          "CUxPR0lOX1JFURDpBxIQCgtQTEFZRVJfTU9WRRDqBxIQCgtQTEFZRVJfU1RP",
          "UBDrBxIPCgpQTEFZRVJfSElUENEPKpQCCgVlU1BJRBIPCgtOT1RfVVNFX1NJ",
          "RBAAEhQKD1NFUlZFUl9TSFVURE9XThDRDxIOCglHQVRFX0lORk8QtRASDgoJ",
          "TE9HSU5fQVNXELYQEgsKBkxPR09VVBC3EBIPCgpTQ0VORV9JTkZPEJkREhEK",
          "DE9CSkVDVF9BUFBFUhD9ERIUCg9PQkpFQ1RfRElTQVBQRVIQ/hESFQoQQVRU",
          "UkJVVEVfQ0hBTkdFRBCvEhITCg5TVEFUVVNfQ0hBTkdFRBDhEhIaChVCUk9B",
          "RENBU1RfUExBWUVSX01PVkUQxRMSGgoVQlJPQURDQVNUX1BMQVlFUl9TVE9Q",
          "EMYTEhkKFEJST0FEQ0FTVF9QTEFZRVJfSElUELkXKjwKC2VPYmplY3RUeXBl",
          "EgoKBlBsYXllchAAEgsKB01vbnN0ZXIQARIJCgVUb29scxACEgkKBUVxdWlw",
          "EAMqMQoQZUNoYXJhY3RvclN0YXR1cxIICgRJZGxlEAASCAoETW92ZRABEgkK",
          "BURlYXRoEAIqOwoJZUhpdExheWVyEg0KCUxheWVyV2FsbBAAEhAKDExheWVy",
          "TW9uc3RlchABEg0KCUxheWVySXRlbRACYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::DataReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::eError), typeof(global::eCPID), typeof(global::eSPID), typeof(global::eObjectType), typeof(global::eCharactorStatus), typeof(global::eHitLayer), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::oNuller), global::oNuller.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oGATE_INFO), global::oGATE_INFO.Parser, new[]{ "Ip", "Port" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oLOGIN_REQ), global::oLOGIN_REQ.Parser, new[]{ "Account" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oLOGIN_ASW), global::oLOGIN_ASW.Parser, new[]{ "Code", "Account" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oLOGOUT), global::oLOGOUT.Parser, new[]{ "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oVector3), global::oVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oSceneInfo), global::oSceneInfo.Parser, new[]{ "Id", "ConfigId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oATTRBUTE_CHANGED), global::oATTRBUTE_CHANGED.Parser, new[]{ "Gid", "Attr" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oSCENE_INFO), global::oSCENE_INFO.Parser, new[]{ "Info" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oObject), global::oObject.Parser, new[]{ "Gid", "ConfigId", "Type", "Pos", "Atts" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oOBJECT_APPER), global::oOBJECT_APPER.Parser, new[]{ "Objects" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oOBJECT_DISAPPER), global::oOBJECT_DISAPPER.Parser, new[]{ "ObjectIds" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oMoveInfo), global::oMoveInfo.Parser, new[]{ "StartPosition", "EndPosition" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oSTATUS_CHANGED), global::oSTATUS_CHANGED.Parser, new[]{ "Gid", "State", "Pos", "MoveInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oPLAYER_MOVE), global::oPLAYER_MOVE.Parser, new[]{ "Gid", "Angle", "Pos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oPLAYER_STOP), global::oPLAYER_STOP.Parser, new[]{ "Gid", "Angle", "Pos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oBROADCAST_PLAYER_MOVE), global::oBROADCAST_PLAYER_MOVE.Parser, new[]{ "Gid", "Angle", "StartPos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oBROADCAST_PLAYER_STOP), global::oBROADCAST_PLAYER_STOP.Parser, new[]{ "Gid", "Angle", "StartPos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oPlayerHit), global::oPlayerHit.Parser, new[]{ "Gid", "HitPos", "HitNormal", "HitLayer" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oPLAYER_HIT), global::oPLAYER_HIT.Parser, new[]{ "HitInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::oBROADCAST_PLAYER_HIT), global::oBROADCAST_PLAYER_HIT.Parser, new[]{ "CharactorGid", "HitInfo", "Damage" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum eError {
  [pbr::OriginalName("unknown_error")] UnknownError = 0,
  [pbr::OriginalName("success")] Success = 1,
  [pbr::OriginalName("other_login")] OtherLogin = 2,
}

public enum eCPID {
  [pbr::OriginalName("NOT_USE_CID")] NotUseCid = 0,
  [pbr::OriginalName("LOGIN_REQ")] LoginReq = 1001,
  [pbr::OriginalName("PLAYER_MOVE")] PlayerMove = 1002,
  [pbr::OriginalName("PLAYER_STOP")] PlayerStop = 1003,
  [pbr::OriginalName("PLAYER_HIT")] PlayerHit = 2001,
}

public enum eSPID {
  [pbr::OriginalName("NOT_USE_SID")] NotUseSid = 0,
  [pbr::OriginalName("SERVER_SHUTDOWN")] ServerShutdown = 2001,
  [pbr::OriginalName("GATE_INFO")] GateInfo = 2101,
  [pbr::OriginalName("LOGIN_ASW")] LoginAsw = 2102,
  [pbr::OriginalName("LOGOUT")] Logout = 2103,
  [pbr::OriginalName("SCENE_INFO")] SceneInfo = 2201,
  [pbr::OriginalName("OBJECT_APPER")] ObjectApper = 2301,
  [pbr::OriginalName("OBJECT_DISAPPER")] ObjectDisapper = 2302,
  [pbr::OriginalName("ATTRBUTE_CHANGED")] AttrbuteChanged = 2351,
  [pbr::OriginalName("STATUS_CHANGED")] StatusChanged = 2401,
  [pbr::OriginalName("BROADCAST_PLAYER_MOVE")] BroadcastPlayerMove = 2501,
  [pbr::OriginalName("BROADCAST_PLAYER_STOP")] BroadcastPlayerStop = 2502,
  [pbr::OriginalName("BROADCAST_PLAYER_HIT")] BroadcastPlayerHit = 3001,
}

public enum eObjectType {
  [pbr::OriginalName("Player")] Player = 0,
  [pbr::OriginalName("Monster")] Monster = 1,
  [pbr::OriginalName("Tools")] Tools = 2,
  [pbr::OriginalName("Equip")] Equip = 3,
}

public enum eCharactorStatus {
  [pbr::OriginalName("Idle")] Idle = 0,
  [pbr::OriginalName("Move")] Move = 1,
  [pbr::OriginalName("Death")] Death = 2,
}

public enum eHitLayer {
  [pbr::OriginalName("LayerWall")] LayerWall = 0,
  [pbr::OriginalName("LayerMonster")] LayerMonster = 1,
  [pbr::OriginalName("LayerItem")] LayerItem = 2,
}

#endregion

#region Messages
public sealed partial class oNuller : pb::IMessage<oNuller>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oNuller> _parser = new pb::MessageParser<oNuller>(() => new oNuller());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oNuller> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oNuller() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oNuller(oNuller other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oNuller Clone() {
    return new oNuller(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oNuller);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oNuller other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oNuller other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class oGATE_INFO : pb::IMessage<oGATE_INFO>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oGATE_INFO> _parser = new pb::MessageParser<oGATE_INFO>(() => new oGATE_INFO());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oGATE_INFO> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oGATE_INFO() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oGATE_INFO(oGATE_INFO other) : this() {
    ip_ = other.ip_;
    port_ = other.port_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oGATE_INFO Clone() {
    return new oGATE_INFO(this);
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 1;
  private string ip_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Ip {
    get { return ip_; }
    set {
      ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "port" field.</summary>
  public const int PortFieldNumber = 2;
  private int port_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oGATE_INFO);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oGATE_INFO other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ip != other.Ip) return false;
    if (Port != other.Port) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ip.Length != 0) hash ^= Ip.GetHashCode();
    if (Port != 0) hash ^= Port.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Ip.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Ip.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ip.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
    }
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oGATE_INFO other) {
    if (other == null) {
      return;
    }
    if (other.Ip.Length != 0) {
      Ip = other.Ip;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Ip = input.ReadString();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Ip = input.ReadString();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oLOGIN_REQ : pb::IMessage<oLOGIN_REQ>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oLOGIN_REQ> _parser = new pb::MessageParser<oLOGIN_REQ>(() => new oLOGIN_REQ());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oLOGIN_REQ> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGIN_REQ() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGIN_REQ(oLOGIN_REQ other) : this() {
    account_ = other.account_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGIN_REQ Clone() {
    return new oLOGIN_REQ(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private long account_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Account {
    get { return account_; }
    set {
      account_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oLOGIN_REQ);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oLOGIN_REQ other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account != 0L) hash ^= Account.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Account != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Account);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Account != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Account);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Account);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oLOGIN_REQ other) {
    if (other == null) {
      return;
    }
    if (other.Account != 0L) {
      Account = other.Account;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Account = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Account = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oLOGIN_ASW : pb::IMessage<oLOGIN_ASW>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oLOGIN_ASW> _parser = new pb::MessageParser<oLOGIN_ASW>(() => new oLOGIN_ASW());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oLOGIN_ASW> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGIN_ASW() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGIN_ASW(oLOGIN_ASW other) : this() {
    code_ = other.code_;
    account_ = other.account_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGIN_ASW Clone() {
    return new oLOGIN_ASW(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private global::eError code_ = global::eError.UnknownError;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::eError Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 2;
  private long account_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Account {
    get { return account_; }
    set {
      account_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oLOGIN_ASW);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oLOGIN_ASW other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (Account != other.Account) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != global::eError.UnknownError) hash ^= Code.GetHashCode();
    if (Account != 0L) hash ^= Account.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != global::eError.UnknownError) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Code);
    }
    if (Account != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Account);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != global::eError.UnknownError) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Code);
    }
    if (Account != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Account);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != global::eError.UnknownError) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
    }
    if (Account != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Account);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oLOGIN_ASW other) {
    if (other == null) {
      return;
    }
    if (other.Code != global::eError.UnknownError) {
      Code = other.Code;
    }
    if (other.Account != 0L) {
      Account = other.Account;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = (global::eError) input.ReadEnum();
          break;
        }
        case 16: {
          Account = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = (global::eError) input.ReadEnum();
          break;
        }
        case 16: {
          Account = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oLOGOUT : pb::IMessage<oLOGOUT>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oLOGOUT> _parser = new pb::MessageParser<oLOGOUT>(() => new oLOGOUT());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oLOGOUT> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGOUT() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGOUT(oLOGOUT other) : this() {
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oLOGOUT Clone() {
    return new oLOGOUT(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private global::eError code_ = global::eError.UnknownError;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::eError Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oLOGOUT);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oLOGOUT other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != global::eError.UnknownError) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != global::eError.UnknownError) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != global::eError.UnknownError) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != global::eError.UnknownError) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oLOGOUT other) {
    if (other == null) {
      return;
    }
    if (other.Code != global::eError.UnknownError) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = (global::eError) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = (global::eError) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oVector3 : pb::IMessage<oVector3>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oVector3> _parser = new pb::MessageParser<oVector3>(() => new oVector3());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oVector3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oVector3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oVector3(oVector3 other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oVector3 Clone() {
    return new oVector3(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oVector3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oVector3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oVector3 other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oSceneInfo : pb::IMessage<oSceneInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oSceneInfo> _parser = new pb::MessageParser<oSceneInfo>(() => new oSceneInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oSceneInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSceneInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSceneInfo(oSceneInfo other) : this() {
    id_ = other.id_;
    configId_ = other.configId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSceneInfo Clone() {
    return new oSceneInfo(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private long id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "config_id" field.</summary>
  public const int ConfigIdFieldNumber = 2;
  private int configId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ConfigId {
    get { return configId_; }
    set {
      configId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oSceneInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oSceneInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ConfigId != other.ConfigId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0L) hash ^= Id.GetHashCode();
    if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Id);
    }
    if (ConfigId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ConfigId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Id);
    }
    if (ConfigId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ConfigId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
    }
    if (ConfigId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oSceneInfo other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0L) {
      Id = other.Id;
    }
    if (other.ConfigId != 0) {
      ConfigId = other.ConfigId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt64();
          break;
        }
        case 16: {
          ConfigId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt64();
          break;
        }
        case 16: {
          ConfigId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oATTRBUTE_CHANGED : pb::IMessage<oATTRBUTE_CHANGED>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oATTRBUTE_CHANGED> _parser = new pb::MessageParser<oATTRBUTE_CHANGED>(() => new oATTRBUTE_CHANGED());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oATTRBUTE_CHANGED> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oATTRBUTE_CHANGED() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oATTRBUTE_CHANGED(oATTRBUTE_CHANGED other) : this() {
    gid_ = other.gid_;
    attr_ = other.attr_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oATTRBUTE_CHANGED Clone() {
    return new oATTRBUTE_CHANGED(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "attr" field.</summary>
  public const int AttrFieldNumber = 2;
  private static readonly pb::FieldCodec<global::oAttribute> _repeated_attr_codec
      = pb::FieldCodec.ForMessage(18, global::oAttribute.Parser);
  private readonly pbc::RepeatedField<global::oAttribute> attr_ = new pbc::RepeatedField<global::oAttribute>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::oAttribute> Attr {
    get { return attr_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oATTRBUTE_CHANGED);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oATTRBUTE_CHANGED other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if(!attr_.Equals(other.attr_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    hash ^= attr_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    attr_.WriteTo(output, _repeated_attr_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    attr_.WriteTo(ref output, _repeated_attr_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    size += attr_.CalculateSize(_repeated_attr_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oATTRBUTE_CHANGED other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    attr_.Add(other.attr_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 18: {
          attr_.AddEntriesFrom(input, _repeated_attr_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 18: {
          attr_.AddEntriesFrom(ref input, _repeated_attr_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oSCENE_INFO : pb::IMessage<oSCENE_INFO>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oSCENE_INFO> _parser = new pb::MessageParser<oSCENE_INFO>(() => new oSCENE_INFO());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oSCENE_INFO> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSCENE_INFO() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSCENE_INFO(oSCENE_INFO other) : this() {
    info_ = other.info_ != null ? other.info_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSCENE_INFO Clone() {
    return new oSCENE_INFO(this);
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 1;
  private global::oSceneInfo info_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oSceneInfo Info {
    get { return info_; }
    set {
      info_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oSCENE_INFO);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oSCENE_INFO other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Info, other.Info)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (info_ != null) hash ^= Info.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (info_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (info_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (info_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oSCENE_INFO other) {
    if (other == null) {
      return;
    }
    if (other.info_ != null) {
      if (info_ == null) {
        Info = new global::oSceneInfo();
      }
      Info.MergeFrom(other.Info);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (info_ == null) {
            Info = new global::oSceneInfo();
          }
          input.ReadMessage(Info);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (info_ == null) {
            Info = new global::oSceneInfo();
          }
          input.ReadMessage(Info);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oObject : pb::IMessage<oObject>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oObject> _parser = new pb::MessageParser<oObject>(() => new oObject());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oObject> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oObject() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oObject(oObject other) : this() {
    gid_ = other.gid_;
    configId_ = other.configId_;
    type_ = other.type_;
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    atts_ = other.atts_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oObject Clone() {
    return new oObject(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "config_id" field.</summary>
  public const int ConfigIdFieldNumber = 2;
  private int configId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ConfigId {
    get { return configId_; }
    set {
      configId_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private global::eObjectType type_ = global::eObjectType.Player;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::eObjectType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 4;
  private global::oVector3 pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  /// <summary>Field number for the "atts" field.</summary>
  public const int AttsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::oAttribute> _repeated_atts_codec
      = pb::FieldCodec.ForMessage(42, global::oAttribute.Parser);
  private readonly pbc::RepeatedField<global::oAttribute> atts_ = new pbc::RepeatedField<global::oAttribute>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::oAttribute> Atts {
    get { return atts_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oObject);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oObject other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (ConfigId != other.ConfigId) return false;
    if (Type != other.Type) return false;
    if (!object.Equals(Pos, other.Pos)) return false;
    if(!atts_.Equals(other.atts_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
    if (Type != global::eObjectType.Player) hash ^= Type.GetHashCode();
    if (pos_ != null) hash ^= Pos.GetHashCode();
    hash ^= atts_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (ConfigId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ConfigId);
    }
    if (Type != global::eObjectType.Player) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Type);
    }
    if (pos_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Pos);
    }
    atts_.WriteTo(output, _repeated_atts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (ConfigId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ConfigId);
    }
    if (Type != global::eObjectType.Player) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Type);
    }
    if (pos_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Pos);
    }
    atts_.WriteTo(ref output, _repeated_atts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (ConfigId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
    }
    if (Type != global::eObjectType.Player) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    size += atts_.CalculateSize(_repeated_atts_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oObject other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.ConfigId != 0) {
      ConfigId = other.ConfigId;
    }
    if (other.Type != global::eObjectType.Player) {
      Type = other.Type;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::oVector3();
      }
      Pos.MergeFrom(other.Pos);
    }
    atts_.Add(other.atts_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 16: {
          ConfigId = input.ReadInt32();
          break;
        }
        case 24: {
          Type = (global::eObjectType) input.ReadEnum();
          break;
        }
        case 34: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 42: {
          atts_.AddEntriesFrom(input, _repeated_atts_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 16: {
          ConfigId = input.ReadInt32();
          break;
        }
        case 24: {
          Type = (global::eObjectType) input.ReadEnum();
          break;
        }
        case 34: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 42: {
          atts_.AddEntriesFrom(ref input, _repeated_atts_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oOBJECT_APPER : pb::IMessage<oOBJECT_APPER>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oOBJECT_APPER> _parser = new pb::MessageParser<oOBJECT_APPER>(() => new oOBJECT_APPER());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oOBJECT_APPER> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oOBJECT_APPER() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oOBJECT_APPER(oOBJECT_APPER other) : this() {
    objects_ = other.objects_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oOBJECT_APPER Clone() {
    return new oOBJECT_APPER(this);
  }

  /// <summary>Field number for the "objects" field.</summary>
  public const int ObjectsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::oObject> _repeated_objects_codec
      = pb::FieldCodec.ForMessage(10, global::oObject.Parser);
  private readonly pbc::RepeatedField<global::oObject> objects_ = new pbc::RepeatedField<global::oObject>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::oObject> Objects {
    get { return objects_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oOBJECT_APPER);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oOBJECT_APPER other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!objects_.Equals(other.objects_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= objects_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    objects_.WriteTo(output, _repeated_objects_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    objects_.WriteTo(ref output, _repeated_objects_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += objects_.CalculateSize(_repeated_objects_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oOBJECT_APPER other) {
    if (other == null) {
      return;
    }
    objects_.Add(other.objects_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          objects_.AddEntriesFrom(input, _repeated_objects_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          objects_.AddEntriesFrom(ref input, _repeated_objects_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oOBJECT_DISAPPER : pb::IMessage<oOBJECT_DISAPPER>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oOBJECT_DISAPPER> _parser = new pb::MessageParser<oOBJECT_DISAPPER>(() => new oOBJECT_DISAPPER());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oOBJECT_DISAPPER> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oOBJECT_DISAPPER() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oOBJECT_DISAPPER(oOBJECT_DISAPPER other) : this() {
    objectIds_ = other.objectIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oOBJECT_DISAPPER Clone() {
    return new oOBJECT_DISAPPER(this);
  }

  /// <summary>Field number for the "object_ids" field.</summary>
  public const int ObjectIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<long> _repeated_objectIds_codec
      = pb::FieldCodec.ForInt64(10);
  private readonly pbc::RepeatedField<long> objectIds_ = new pbc::RepeatedField<long>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<long> ObjectIds {
    get { return objectIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oOBJECT_DISAPPER);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oOBJECT_DISAPPER other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!objectIds_.Equals(other.objectIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= objectIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    objectIds_.WriteTo(output, _repeated_objectIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    objectIds_.WriteTo(ref output, _repeated_objectIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += objectIds_.CalculateSize(_repeated_objectIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oOBJECT_DISAPPER other) {
    if (other == null) {
      return;
    }
    objectIds_.Add(other.objectIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          objectIds_.AddEntriesFrom(input, _repeated_objectIds_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          objectIds_.AddEntriesFrom(ref input, _repeated_objectIds_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oMoveInfo : pb::IMessage<oMoveInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oMoveInfo> _parser = new pb::MessageParser<oMoveInfo>(() => new oMoveInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oMoveInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oMoveInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oMoveInfo(oMoveInfo other) : this() {
    startPosition_ = other.startPosition_ != null ? other.startPosition_.Clone() : null;
    endPosition_ = other.endPosition_ != null ? other.endPosition_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oMoveInfo Clone() {
    return new oMoveInfo(this);
  }

  /// <summary>Field number for the "start_position" field.</summary>
  public const int StartPositionFieldNumber = 1;
  private global::oVector3 startPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 StartPosition {
    get { return startPosition_; }
    set {
      startPosition_ = value;
    }
  }

  /// <summary>Field number for the "end_position" field.</summary>
  public const int EndPositionFieldNumber = 2;
  private global::oVector3 endPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 EndPosition {
    get { return endPosition_; }
    set {
      endPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oMoveInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oMoveInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StartPosition, other.StartPosition)) return false;
    if (!object.Equals(EndPosition, other.EndPosition)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (startPosition_ != null) hash ^= StartPosition.GetHashCode();
    if (endPosition_ != null) hash ^= EndPosition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (startPosition_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StartPosition);
    }
    if (endPosition_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(EndPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (startPosition_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StartPosition);
    }
    if (endPosition_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(EndPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (startPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPosition);
    }
    if (endPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndPosition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oMoveInfo other) {
    if (other == null) {
      return;
    }
    if (other.startPosition_ != null) {
      if (startPosition_ == null) {
        StartPosition = new global::oVector3();
      }
      StartPosition.MergeFrom(other.StartPosition);
    }
    if (other.endPosition_ != null) {
      if (endPosition_ == null) {
        EndPosition = new global::oVector3();
      }
      EndPosition.MergeFrom(other.EndPosition);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (startPosition_ == null) {
            StartPosition = new global::oVector3();
          }
          input.ReadMessage(StartPosition);
          break;
        }
        case 18: {
          if (endPosition_ == null) {
            EndPosition = new global::oVector3();
          }
          input.ReadMessage(EndPosition);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (startPosition_ == null) {
            StartPosition = new global::oVector3();
          }
          input.ReadMessage(StartPosition);
          break;
        }
        case 18: {
          if (endPosition_ == null) {
            EndPosition = new global::oVector3();
          }
          input.ReadMessage(EndPosition);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oSTATUS_CHANGED : pb::IMessage<oSTATUS_CHANGED>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oSTATUS_CHANGED> _parser = new pb::MessageParser<oSTATUS_CHANGED>(() => new oSTATUS_CHANGED());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oSTATUS_CHANGED> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSTATUS_CHANGED() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSTATUS_CHANGED(oSTATUS_CHANGED other) : this() {
    gid_ = other.gid_;
    state_ = other.state_;
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    moveInfo_ = other.moveInfo_ != null ? other.moveInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oSTATUS_CHANGED Clone() {
    return new oSTATUS_CHANGED(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::eCharactorStatus state_ = global::eCharactorStatus.Idle;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::eCharactorStatus State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 3;
  private global::oVector3 pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  /// <summary>Field number for the "move_info" field.</summary>
  public const int MoveInfoFieldNumber = 4;
  private global::oMoveInfo moveInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oMoveInfo MoveInfo {
    get { return moveInfo_; }
    set {
      moveInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oSTATUS_CHANGED);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oSTATUS_CHANGED other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (State != other.State) return false;
    if (!object.Equals(Pos, other.Pos)) return false;
    if (!object.Equals(MoveInfo, other.MoveInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (State != global::eCharactorStatus.Idle) hash ^= State.GetHashCode();
    if (pos_ != null) hash ^= Pos.GetHashCode();
    if (moveInfo_ != null) hash ^= MoveInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (State != global::eCharactorStatus.Idle) {
      output.WriteRawTag(16);
      output.WriteEnum((int) State);
    }
    if (pos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Pos);
    }
    if (moveInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MoveInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (State != global::eCharactorStatus.Idle) {
      output.WriteRawTag(16);
      output.WriteEnum((int) State);
    }
    if (pos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Pos);
    }
    if (moveInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MoveInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (State != global::eCharactorStatus.Idle) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    if (moveInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oSTATUS_CHANGED other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.State != global::eCharactorStatus.Idle) {
      State = other.State;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::oVector3();
      }
      Pos.MergeFrom(other.Pos);
    }
    if (other.moveInfo_ != null) {
      if (moveInfo_ == null) {
        MoveInfo = new global::oMoveInfo();
      }
      MoveInfo.MergeFrom(other.MoveInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 16: {
          State = (global::eCharactorStatus) input.ReadEnum();
          break;
        }
        case 26: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 34: {
          if (moveInfo_ == null) {
            MoveInfo = new global::oMoveInfo();
          }
          input.ReadMessage(MoveInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 16: {
          State = (global::eCharactorStatus) input.ReadEnum();
          break;
        }
        case 26: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 34: {
          if (moveInfo_ == null) {
            MoveInfo = new global::oMoveInfo();
          }
          input.ReadMessage(MoveInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oPLAYER_MOVE : pb::IMessage<oPLAYER_MOVE>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oPLAYER_MOVE> _parser = new pb::MessageParser<oPLAYER_MOVE>(() => new oPLAYER_MOVE());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oPLAYER_MOVE> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_MOVE() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_MOVE(oPLAYER_MOVE other) : this() {
    gid_ = other.gid_;
    angle_ = other.angle_;
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_MOVE Clone() {
    return new oPLAYER_MOVE(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "angle" field.</summary>
  public const int AngleFieldNumber = 2;
  private float angle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Angle {
    get { return angle_; }
    set {
      angle_ = value;
    }
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 3;
  private global::oVector3 pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oPLAYER_MOVE);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oPLAYER_MOVE other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
    if (!object.Equals(Pos, other.Pos)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
    if (pos_ != null) hash ^= Pos.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (pos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Pos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (pos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Pos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (Angle != 0F) {
      size += 1 + 4;
    }
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oPLAYER_MOVE other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.Angle != 0F) {
      Angle = other.Angle;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::oVector3();
      }
      Pos.MergeFrom(other.Pos);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oPLAYER_STOP : pb::IMessage<oPLAYER_STOP>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oPLAYER_STOP> _parser = new pb::MessageParser<oPLAYER_STOP>(() => new oPLAYER_STOP());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oPLAYER_STOP> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_STOP() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_STOP(oPLAYER_STOP other) : this() {
    gid_ = other.gid_;
    angle_ = other.angle_;
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_STOP Clone() {
    return new oPLAYER_STOP(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "angle" field.</summary>
  public const int AngleFieldNumber = 2;
  private float angle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Angle {
    get { return angle_; }
    set {
      angle_ = value;
    }
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 3;
  private global::oVector3 pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oPLAYER_STOP);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oPLAYER_STOP other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
    if (!object.Equals(Pos, other.Pos)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
    if (pos_ != null) hash ^= Pos.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (pos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Pos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (pos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Pos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (Angle != 0F) {
      size += 1 + 4;
    }
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oPLAYER_STOP other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.Angle != 0F) {
      Angle = other.Angle;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::oVector3();
      }
      Pos.MergeFrom(other.Pos);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (pos_ == null) {
            Pos = new global::oVector3();
          }
          input.ReadMessage(Pos);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oBROADCAST_PLAYER_MOVE : pb::IMessage<oBROADCAST_PLAYER_MOVE>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oBROADCAST_PLAYER_MOVE> _parser = new pb::MessageParser<oBROADCAST_PLAYER_MOVE>(() => new oBROADCAST_PLAYER_MOVE());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oBROADCAST_PLAYER_MOVE> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_MOVE() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_MOVE(oBROADCAST_PLAYER_MOVE other) : this() {
    gid_ = other.gid_;
    angle_ = other.angle_;
    startPos_ = other.startPos_ != null ? other.startPos_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_MOVE Clone() {
    return new oBROADCAST_PLAYER_MOVE(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "angle" field.</summary>
  public const int AngleFieldNumber = 2;
  private float angle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Angle {
    get { return angle_; }
    set {
      angle_ = value;
    }
  }

  /// <summary>Field number for the "start_pos" field.</summary>
  public const int StartPosFieldNumber = 3;
  private global::oVector3 startPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 StartPos {
    get { return startPos_; }
    set {
      startPos_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oBROADCAST_PLAYER_MOVE);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oBROADCAST_PLAYER_MOVE other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
    if (!object.Equals(StartPos, other.StartPos)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
    if (startPos_ != null) hash ^= StartPos.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (startPos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(StartPos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (startPos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(StartPos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (Angle != 0F) {
      size += 1 + 4;
    }
    if (startPos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPos);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oBROADCAST_PLAYER_MOVE other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.Angle != 0F) {
      Angle = other.Angle;
    }
    if (other.startPos_ != null) {
      if (startPos_ == null) {
        StartPos = new global::oVector3();
      }
      StartPos.MergeFrom(other.StartPos);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (startPos_ == null) {
            StartPos = new global::oVector3();
          }
          input.ReadMessage(StartPos);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (startPos_ == null) {
            StartPos = new global::oVector3();
          }
          input.ReadMessage(StartPos);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oBROADCAST_PLAYER_STOP : pb::IMessage<oBROADCAST_PLAYER_STOP>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oBROADCAST_PLAYER_STOP> _parser = new pb::MessageParser<oBROADCAST_PLAYER_STOP>(() => new oBROADCAST_PLAYER_STOP());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oBROADCAST_PLAYER_STOP> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_STOP() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_STOP(oBROADCAST_PLAYER_STOP other) : this() {
    gid_ = other.gid_;
    angle_ = other.angle_;
    startPos_ = other.startPos_ != null ? other.startPos_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_STOP Clone() {
    return new oBROADCAST_PLAYER_STOP(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "angle" field.</summary>
  public const int AngleFieldNumber = 2;
  private float angle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Angle {
    get { return angle_; }
    set {
      angle_ = value;
    }
  }

  /// <summary>Field number for the "start_pos" field.</summary>
  public const int StartPosFieldNumber = 3;
  private global::oVector3 startPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 StartPos {
    get { return startPos_; }
    set {
      startPos_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oBROADCAST_PLAYER_STOP);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oBROADCAST_PLAYER_STOP other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
    if (!object.Equals(StartPos, other.StartPos)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
    if (startPos_ != null) hash ^= StartPos.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (startPos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(StartPos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (Angle != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Angle);
    }
    if (startPos_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(StartPos);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (Angle != 0F) {
      size += 1 + 4;
    }
    if (startPos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPos);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oBROADCAST_PLAYER_STOP other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.Angle != 0F) {
      Angle = other.Angle;
    }
    if (other.startPos_ != null) {
      if (startPos_ == null) {
        StartPos = new global::oVector3();
      }
      StartPos.MergeFrom(other.StartPos);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (startPos_ == null) {
            StartPos = new global::oVector3();
          }
          input.ReadMessage(StartPos);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 21: {
          Angle = input.ReadFloat();
          break;
        }
        case 26: {
          if (startPos_ == null) {
            StartPos = new global::oVector3();
          }
          input.ReadMessage(StartPos);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oPlayerHit : pb::IMessage<oPlayerHit>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oPlayerHit> _parser = new pb::MessageParser<oPlayerHit>(() => new oPlayerHit());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oPlayerHit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPlayerHit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPlayerHit(oPlayerHit other) : this() {
    gid_ = other.gid_;
    hitPos_ = other.hitPos_ != null ? other.hitPos_.Clone() : null;
    hitNormal_ = other.hitNormal_ != null ? other.hitNormal_.Clone() : null;
    hitLayer_ = other.hitLayer_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPlayerHit Clone() {
    return new oPlayerHit(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private long gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gid {
    get { return gid_; }
    set {
      gid_ = value;
    }
  }

  /// <summary>Field number for the "hitPos" field.</summary>
  public const int HitPosFieldNumber = 2;
  private global::oVector3 hitPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 HitPos {
    get { return hitPos_; }
    set {
      hitPos_ = value;
    }
  }

  /// <summary>Field number for the "hitNormal" field.</summary>
  public const int HitNormalFieldNumber = 3;
  private global::oVector3 hitNormal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oVector3 HitNormal {
    get { return hitNormal_; }
    set {
      hitNormal_ = value;
    }
  }

  /// <summary>Field number for the "hitLayer" field.</summary>
  public const int HitLayerFieldNumber = 4;
  private global::eHitLayer hitLayer_ = global::eHitLayer.LayerWall;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::eHitLayer HitLayer {
    get { return hitLayer_; }
    set {
      hitLayer_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oPlayerHit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oPlayerHit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (!object.Equals(HitPos, other.HitPos)) return false;
    if (!object.Equals(HitNormal, other.HitNormal)) return false;
    if (HitLayer != other.HitLayer) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Gid != 0L) hash ^= Gid.GetHashCode();
    if (hitPos_ != null) hash ^= HitPos.GetHashCode();
    if (hitNormal_ != null) hash ^= HitNormal.GetHashCode();
    if (HitLayer != global::eHitLayer.LayerWall) hash ^= HitLayer.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (hitPos_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HitPos);
    }
    if (hitNormal_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(HitNormal);
    }
    if (HitLayer != global::eHitLayer.LayerWall) {
      output.WriteRawTag(32);
      output.WriteEnum((int) HitLayer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Gid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Gid);
    }
    if (hitPos_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HitPos);
    }
    if (hitNormal_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(HitNormal);
    }
    if (HitLayer != global::eHitLayer.LayerWall) {
      output.WriteRawTag(32);
      output.WriteEnum((int) HitLayer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Gid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gid);
    }
    if (hitPos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitPos);
    }
    if (hitNormal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitNormal);
    }
    if (HitLayer != global::eHitLayer.LayerWall) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HitLayer);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oPlayerHit other) {
    if (other == null) {
      return;
    }
    if (other.Gid != 0L) {
      Gid = other.Gid;
    }
    if (other.hitPos_ != null) {
      if (hitPos_ == null) {
        HitPos = new global::oVector3();
      }
      HitPos.MergeFrom(other.HitPos);
    }
    if (other.hitNormal_ != null) {
      if (hitNormal_ == null) {
        HitNormal = new global::oVector3();
      }
      HitNormal.MergeFrom(other.HitNormal);
    }
    if (other.HitLayer != global::eHitLayer.LayerWall) {
      HitLayer = other.HitLayer;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 18: {
          if (hitPos_ == null) {
            HitPos = new global::oVector3();
          }
          input.ReadMessage(HitPos);
          break;
        }
        case 26: {
          if (hitNormal_ == null) {
            HitNormal = new global::oVector3();
          }
          input.ReadMessage(HitNormal);
          break;
        }
        case 32: {
          HitLayer = (global::eHitLayer) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadInt64();
          break;
        }
        case 18: {
          if (hitPos_ == null) {
            HitPos = new global::oVector3();
          }
          input.ReadMessage(HitPos);
          break;
        }
        case 26: {
          if (hitNormal_ == null) {
            HitNormal = new global::oVector3();
          }
          input.ReadMessage(HitNormal);
          break;
        }
        case 32: {
          HitLayer = (global::eHitLayer) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oPLAYER_HIT : pb::IMessage<oPLAYER_HIT>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oPLAYER_HIT> _parser = new pb::MessageParser<oPLAYER_HIT>(() => new oPLAYER_HIT());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oPLAYER_HIT> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_HIT() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_HIT(oPLAYER_HIT other) : this() {
    hitInfo_ = other.hitInfo_ != null ? other.hitInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oPLAYER_HIT Clone() {
    return new oPLAYER_HIT(this);
  }

  /// <summary>Field number for the "hitInfo" field.</summary>
  public const int HitInfoFieldNumber = 1;
  private global::oPlayerHit hitInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oPlayerHit HitInfo {
    get { return hitInfo_; }
    set {
      hitInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oPLAYER_HIT);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oPLAYER_HIT other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(HitInfo, other.HitInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (hitInfo_ != null) hash ^= HitInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (hitInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(HitInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (hitInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(HitInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (hitInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oPLAYER_HIT other) {
    if (other == null) {
      return;
    }
    if (other.hitInfo_ != null) {
      if (hitInfo_ == null) {
        HitInfo = new global::oPlayerHit();
      }
      HitInfo.MergeFrom(other.HitInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (hitInfo_ == null) {
            HitInfo = new global::oPlayerHit();
          }
          input.ReadMessage(HitInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (hitInfo_ == null) {
            HitInfo = new global::oPlayerHit();
          }
          input.ReadMessage(HitInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class oBROADCAST_PLAYER_HIT : pb::IMessage<oBROADCAST_PLAYER_HIT>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<oBROADCAST_PLAYER_HIT> _parser = new pb::MessageParser<oBROADCAST_PLAYER_HIT>(() => new oBROADCAST_PLAYER_HIT());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<oBROADCAST_PLAYER_HIT> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_HIT() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_HIT(oBROADCAST_PLAYER_HIT other) : this() {
    charactorGid_ = other.charactorGid_;
    hitInfo_ = other.hitInfo_ != null ? other.hitInfo_.Clone() : null;
    damage_ = other.damage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public oBROADCAST_PLAYER_HIT Clone() {
    return new oBROADCAST_PLAYER_HIT(this);
  }

  /// <summary>Field number for the "charactor_gid" field.</summary>
  public const int CharactorGidFieldNumber = 1;
  private long charactorGid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CharactorGid {
    get { return charactorGid_; }
    set {
      charactorGid_ = value;
    }
  }

  /// <summary>Field number for the "hitInfo" field.</summary>
  public const int HitInfoFieldNumber = 2;
  private global::oPlayerHit hitInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::oPlayerHit HitInfo {
    get { return hitInfo_; }
    set {
      hitInfo_ = value;
    }
  }

  /// <summary>Field number for the "damage" field.</summary>
  public const int DamageFieldNumber = 3;
  private float damage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Damage {
    get { return damage_; }
    set {
      damage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as oBROADCAST_PLAYER_HIT);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(oBROADCAST_PLAYER_HIT other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CharactorGid != other.CharactorGid) return false;
    if (!object.Equals(HitInfo, other.HitInfo)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Damage, other.Damage)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CharactorGid != 0L) hash ^= CharactorGid.GetHashCode();
    if (hitInfo_ != null) hash ^= HitInfo.GetHashCode();
    if (Damage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Damage);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (CharactorGid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(CharactorGid);
    }
    if (hitInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HitInfo);
    }
    if (Damage != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Damage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (CharactorGid != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(CharactorGid);
    }
    if (hitInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HitInfo);
    }
    if (Damage != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Damage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CharactorGid != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CharactorGid);
    }
    if (hitInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitInfo);
    }
    if (Damage != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(oBROADCAST_PLAYER_HIT other) {
    if (other == null) {
      return;
    }
    if (other.CharactorGid != 0L) {
      CharactorGid = other.CharactorGid;
    }
    if (other.hitInfo_ != null) {
      if (hitInfo_ == null) {
        HitInfo = new global::oPlayerHit();
      }
      HitInfo.MergeFrom(other.HitInfo);
    }
    if (other.Damage != 0F) {
      Damage = other.Damage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CharactorGid = input.ReadInt64();
          break;
        }
        case 18: {
          if (hitInfo_ == null) {
            HitInfo = new global::oPlayerHit();
          }
          input.ReadMessage(HitInfo);
          break;
        }
        case 29: {
          Damage = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CharactorGid = input.ReadInt64();
          break;
        }
        case 18: {
          if (hitInfo_ == null) {
            HitInfo = new global::oPlayerHit();
          }
          input.ReadMessage(HitInfo);
          break;
        }
        case 29: {
          Damage = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
