// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Architecture.proto

#include "Architecture.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
extern PROTOBUF_INTERNAL_EXPORT_Architecture_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oAddress_Architecture_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Architecture_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_oReport_Architecture_2eproto;
namespace architecture {
class oAddressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oAddress> _instance;
} _oAddress_default_instance_;
class oReportDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oReport> _instance;
} _oReport_default_instance_;
class oAssigneIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oAssigneID> _instance;
} _oAssigneID_default_instance_;
class oNoderInitedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oNoderInited> _instance;
} _oNoderInited_default_instance_;
class oBroadcastNoderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oBroadcastNoder> _instance;
} _oBroadcastNoder_default_instance_;
class oForwardClientMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oForwardClientMessage> _instance;
} _oForwardClientMessage_default_instance_;
class oSendMessageToClientDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oSendMessageToClient> _instance;
} _oSendMessageToClient_default_instance_;
class oLocationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oLocation> _instance;
} _oLocation_default_instance_;
class oShutdownDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<oShutdown> _instance;
} _oShutdown_default_instance_;
}  // namespace architecture
static void InitDefaultsscc_info_oAddress_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oAddress_default_instance_;
    new (ptr) ::architecture::oAddress();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oAddress_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oAddress_Architecture_2eproto}, {}};

static void InitDefaultsscc_info_oAssigneID_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oAssigneID_default_instance_;
    new (ptr) ::architecture::oAssigneID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oAssigneID_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oAssigneID_Architecture_2eproto}, {}};

static void InitDefaultsscc_info_oBroadcastNoder_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oBroadcastNoder_default_instance_;
    new (ptr) ::architecture::oBroadcastNoder();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_oBroadcastNoder_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_oBroadcastNoder_Architecture_2eproto}, {
      &scc_info_oReport_Architecture_2eproto.base,}};

static void InitDefaultsscc_info_oForwardClientMessage_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oForwardClientMessage_default_instance_;
    new (ptr) ::architecture::oForwardClientMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oForwardClientMessage_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oForwardClientMessage_Architecture_2eproto}, {}};

static void InitDefaultsscc_info_oLocation_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oLocation_default_instance_;
    new (ptr) ::architecture::oLocation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oLocation_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oLocation_Architecture_2eproto}, {}};

static void InitDefaultsscc_info_oNoderInited_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oNoderInited_default_instance_;
    new (ptr) ::architecture::oNoderInited();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oNoderInited_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oNoderInited_Architecture_2eproto}, {}};

static void InitDefaultsscc_info_oReport_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oReport_default_instance_;
    new (ptr) ::architecture::oReport();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_oReport_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_oReport_Architecture_2eproto}, {
      &scc_info_oAddress_Architecture_2eproto.base,}};

static void InitDefaultsscc_info_oSendMessageToClient_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oSendMessageToClient_default_instance_;
    new (ptr) ::architecture::oSendMessageToClient();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oSendMessageToClient_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oSendMessageToClient_Architecture_2eproto}, {}};

static void InitDefaultsscc_info_oShutdown_Architecture_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::architecture::_oShutdown_default_instance_;
    new (ptr) ::architecture::oShutdown();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_oShutdown_Architecture_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_oShutdown_Architecture_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Architecture_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Architecture_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Architecture_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Architecture_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oAddress, area_),
  PROTOBUF_FIELD_OFFSET(::architecture::oAddress, ip_),
  PROTOBUF_FIELD_OFFSET(::architecture::oAddress, port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oReport, id_),
  PROTOBUF_FIELD_OFFSET(::architecture::oReport, name_),
  PROTOBUF_FIELD_OFFSET(::architecture::oReport, address_),
  PROTOBUF_FIELD_OFFSET(::architecture::oReport, idfa_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oAssigneID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oAssigneID, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oNoderInited, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oBroadcastNoder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oBroadcastNoder, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oForwardClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oForwardClientMessage, protoid_),
  PROTOBUF_FIELD_OFFSET(::architecture::oForwardClientMessage, account_),
  PROTOBUF_FIELD_OFFSET(::architecture::oForwardClientMessage, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oSendMessageToClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oSendMessageToClient, protoid_),
  PROTOBUF_FIELD_OFFSET(::architecture::oSendMessageToClient, account_),
  PROTOBUF_FIELD_OFFSET(::architecture::oSendMessageToClient, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::architecture::oLocation, id_),
  PROTOBUF_FIELD_OFFSET(::architecture::oLocation, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::architecture::oShutdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::architecture::oAddress)},
  { 8, -1, sizeof(::architecture::oReport)},
  { 17, -1, sizeof(::architecture::oAssigneID)},
  { 23, -1, sizeof(::architecture::oNoderInited)},
  { 28, -1, sizeof(::architecture::oBroadcastNoder)},
  { 34, -1, sizeof(::architecture::oForwardClientMessage)},
  { 42, -1, sizeof(::architecture::oSendMessageToClient)},
  { 50, -1, sizeof(::architecture::oLocation)},
  { 57, -1, sizeof(::architecture::oShutdown)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oAddress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oReport_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oAssigneID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oNoderInited_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oBroadcastNoder_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oForwardClientMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oSendMessageToClient_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oLocation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::architecture::_oShutdown_default_instance_),
};

const char descriptor_table_protodef_Architecture_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022Architecture.proto\022\014architecture\"2\n\010oA"
  "ddress\022\014\n\004area\030\001 \001(\005\022\n\n\002ip\030\002 \001(\t\022\014\n\004port"
  "\030\003 \001(\005\"Z\n\007oReport\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 "
  "\001(\t\022\'\n\007address\030\003 \001(\0132\026.architecture.oAdd"
  "ress\022\014\n\004idfa\030\004 \001(\003\"\030\n\noAssigneID\022\n\n\002id\030\001"
  " \001(\005\"\016\n\014oNoderInited\"6\n\017oBroadcastNoder\022"
  "#\n\004info\030\001 \001(\0132\025.architecture.oReport\"G\n\025"
  "oForwardClientMessage\022\017\n\007protoid\030\001 \001(\005\022\017"
  "\n\007account\030\002 \001(\003\022\014\n\004data\030\003 \001(\014\"F\n\024oSendMe"
  "ssageToClient\022\017\n\007protoid\030\001 \001(\005\022\017\n\007accoun"
  "t\030\002 \001(\003\022\014\n\004data\030\003 \001(\014\"B\n\toLocation\022\n\n\002id"
  "\030\001 \001(\003\022)\n\004type\030\002 \001(\0162\033.architecture.eLoc"
  "ationType\"\013\n\toShutdown*\235\001\n\014eArchProtoID\022"
  "\n\n\006Report\020\000\022\r\n\tAssigneID\020\001\022\017\n\013NoderInite"
  "d\020\002\022\022\n\016BroadcastNoder\020\003\022\030\n\024ForwardClient"
  "Message\020\004\022\027\n\023SendMessageToClient\020\005\022\014\n\010Sh"
  "utdown\020\006\022\014\n\010Location\0203**\n\reLocationType\022"
  "\n\n\006appear\020\000\022\r\n\tdisappear\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Architecture_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Architecture_2eproto_sccs[9] = {
  &scc_info_oAddress_Architecture_2eproto.base,
  &scc_info_oAssigneID_Architecture_2eproto.base,
  &scc_info_oBroadcastNoder_Architecture_2eproto.base,
  &scc_info_oForwardClientMessage_Architecture_2eproto.base,
  &scc_info_oLocation_Architecture_2eproto.base,
  &scc_info_oNoderInited_Architecture_2eproto.base,
  &scc_info_oReport_Architecture_2eproto.base,
  &scc_info_oSendMessageToClient_Architecture_2eproto.base,
  &scc_info_oShutdown_Architecture_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Architecture_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Architecture_2eproto = {
  false, false, descriptor_table_protodef_Architecture_2eproto, "Architecture.proto", 714,
  &descriptor_table_Architecture_2eproto_once, descriptor_table_Architecture_2eproto_sccs, descriptor_table_Architecture_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_Architecture_2eproto::offsets,
  file_level_metadata_Architecture_2eproto, 9, file_level_enum_descriptors_Architecture_2eproto, file_level_service_descriptors_Architecture_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Architecture_2eproto(&descriptor_table_Architecture_2eproto);
namespace architecture {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* eArchProtoID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Architecture_2eproto);
  return file_level_enum_descriptors_Architecture_2eproto[0];
}
bool eArchProtoID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 51:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* eLocationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Architecture_2eproto);
  return file_level_enum_descriptors_Architecture_2eproto[1];
}
bool eLocationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class oAddress::_Internal {
 public:
};

oAddress::oAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oAddress)
}
oAddress::oAddress(const oAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArena());
  }
  ::memcpy(&area_, &from.area_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&area_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:architecture.oAddress)
}

void oAddress::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_oAddress_Architecture_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&area_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&area_)) + sizeof(port_));
}

oAddress::~oAddress() {
  // @@protoc_insertion_point(destructor:architecture.oAddress)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oAddress::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void oAddress::ArenaDtor(void* object) {
  oAddress* _this = reinterpret_cast< oAddress* >(object);
  (void)_this;
}
void oAddress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oAddress& oAddress::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oAddress_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty();
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&area_)) + sizeof(port_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oAddress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 area = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          area_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "architecture.oAddress.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oAddress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 area = 1;
  if (this->area() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_area(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "architecture.oAddress.ip");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ip(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oAddress)
  return target;
}

size_t oAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oAddress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // int32 area = 1;
  if (this->area() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_area());
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAddress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const oAddress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oAddress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oAddress)
    MergeFrom(*source);
  }
}

void oAddress::MergeFrom(const oAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.area() != 0) {
    _internal_set_area(from._internal_area());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
}

void oAddress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAddress::CopyFrom(const oAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAddress::IsInitialized() const {
  return true;
}

void oAddress::InternalSwap(oAddress* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(oAddress, port_)
      + sizeof(oAddress::port_)
      - PROTOBUF_FIELD_OFFSET(oAddress, area_)>(
          reinterpret_cast<char*>(&area_),
          reinterpret_cast<char*>(&other->area_));
}

::PROTOBUF_NAMESPACE_ID::Metadata oAddress::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oReport::_Internal {
 public:
  static const ::architecture::oAddress& address(const oReport* msg);
};

const ::architecture::oAddress&
oReport::_Internal::address(const oReport* msg) {
  return *msg->address_;
}
oReport::oReport(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oReport)
}
oReport::oReport(const oReport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_address()) {
    address_ = new ::architecture::oAddress(*from.address_);
  } else {
    address_ = nullptr;
  }
  ::memcpy(&idfa_, &from.idfa_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&idfa_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:architecture.oReport)
}

void oReport::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_oReport_Architecture_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&address_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&address_)) + sizeof(id_));
}

oReport::~oReport() {
  // @@protoc_insertion_point(destructor:architecture.oReport)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oReport::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void oReport::ArenaDtor(void* object) {
  oReport* _this = reinterpret_cast< oReport* >(object);
  (void)_this;
}
void oReport::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oReport& oReport::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oReport_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oReport::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oReport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  ::memset(&idfa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&idfa_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oReport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "architecture.oReport.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .architecture.oAddress address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 idfa = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          idfa_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oReport::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oReport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "architecture.oReport.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .architecture.oAddress address = 3;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::address(this), target, stream);
  }

  // int64 idfa = 4;
  if (this->idfa() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_idfa(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oReport)
  return target;
}

size_t oReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oReport)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .architecture.oAddress address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // int64 idfa = 4;
  if (this->idfa() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_idfa());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oReport::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oReport)
  GOOGLE_DCHECK_NE(&from, this);
  const oReport* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oReport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oReport)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oReport)
    MergeFrom(*source);
  }
}

void oReport::MergeFrom(const oReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::architecture::oAddress::MergeFrom(from._internal_address());
  }
  if (from.idfa() != 0) {
    _internal_set_idfa(from._internal_idfa());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void oReport::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oReport::CopyFrom(const oReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oReport::IsInitialized() const {
  return true;
}

void oReport::InternalSwap(oReport* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(oReport, id_)
      + sizeof(oReport::id_)
      - PROTOBUF_FIELD_OFFSET(oReport, address_)>(
          reinterpret_cast<char*>(&address_),
          reinterpret_cast<char*>(&other->address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata oReport::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oAssigneID::_Internal {
 public:
};

oAssigneID::oAssigneID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oAssigneID)
}
oAssigneID::oAssigneID(const oAssigneID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:architecture.oAssigneID)
}

void oAssigneID::SharedCtor() {
  id_ = 0;
}

oAssigneID::~oAssigneID() {
  // @@protoc_insertion_point(destructor:architecture.oAssigneID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oAssigneID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void oAssigneID::ArenaDtor(void* object) {
  oAssigneID* _this = reinterpret_cast< oAssigneID* >(object);
  (void)_this;
}
void oAssigneID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oAssigneID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oAssigneID& oAssigneID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oAssigneID_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oAssigneID::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oAssigneID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oAssigneID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oAssigneID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oAssigneID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oAssigneID)
  return target;
}

size_t oAssigneID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oAssigneID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oAssigneID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oAssigneID)
  GOOGLE_DCHECK_NE(&from, this);
  const oAssigneID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oAssigneID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oAssigneID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oAssigneID)
    MergeFrom(*source);
  }
}

void oAssigneID::MergeFrom(const oAssigneID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oAssigneID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void oAssigneID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oAssigneID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oAssigneID::CopyFrom(const oAssigneID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oAssigneID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oAssigneID::IsInitialized() const {
  return true;
}

void oAssigneID::InternalSwap(oAssigneID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata oAssigneID::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oNoderInited::_Internal {
 public:
};

oNoderInited::oNoderInited(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oNoderInited)
}
oNoderInited::oNoderInited(const oNoderInited& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:architecture.oNoderInited)
}

void oNoderInited::SharedCtor() {
}

oNoderInited::~oNoderInited() {
  // @@protoc_insertion_point(destructor:architecture.oNoderInited)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oNoderInited::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void oNoderInited::ArenaDtor(void* object) {
  oNoderInited* _this = reinterpret_cast< oNoderInited* >(object);
  (void)_this;
}
void oNoderInited::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oNoderInited::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oNoderInited& oNoderInited::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oNoderInited_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oNoderInited::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oNoderInited)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oNoderInited::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oNoderInited::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oNoderInited)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oNoderInited)
  return target;
}

size_t oNoderInited::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oNoderInited)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oNoderInited::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oNoderInited)
  GOOGLE_DCHECK_NE(&from, this);
  const oNoderInited* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oNoderInited>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oNoderInited)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oNoderInited)
    MergeFrom(*source);
  }
}

void oNoderInited::MergeFrom(const oNoderInited& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oNoderInited)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void oNoderInited::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oNoderInited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oNoderInited::CopyFrom(const oNoderInited& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oNoderInited)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oNoderInited::IsInitialized() const {
  return true;
}

void oNoderInited::InternalSwap(oNoderInited* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata oNoderInited::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oBroadcastNoder::_Internal {
 public:
  static const ::architecture::oReport& info(const oBroadcastNoder* msg);
};

const ::architecture::oReport&
oBroadcastNoder::_Internal::info(const oBroadcastNoder* msg) {
  return *msg->info_;
}
oBroadcastNoder::oBroadcastNoder(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oBroadcastNoder)
}
oBroadcastNoder::oBroadcastNoder(const oBroadcastNoder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::architecture::oReport(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:architecture.oBroadcastNoder)
}

void oBroadcastNoder::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_oBroadcastNoder_Architecture_2eproto.base);
  info_ = nullptr;
}

oBroadcastNoder::~oBroadcastNoder() {
  // @@protoc_insertion_point(destructor:architecture.oBroadcastNoder)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oBroadcastNoder::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete info_;
}

void oBroadcastNoder::ArenaDtor(void* object) {
  oBroadcastNoder* _this = reinterpret_cast< oBroadcastNoder* >(object);
  (void)_this;
}
void oBroadcastNoder::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oBroadcastNoder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oBroadcastNoder& oBroadcastNoder::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oBroadcastNoder_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oBroadcastNoder::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oBroadcastNoder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oBroadcastNoder::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .architecture.oReport info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oBroadcastNoder::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oBroadcastNoder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .architecture.oReport info = 1;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oBroadcastNoder)
  return target;
}

size_t oBroadcastNoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oBroadcastNoder)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .architecture.oReport info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oBroadcastNoder::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oBroadcastNoder)
  GOOGLE_DCHECK_NE(&from, this);
  const oBroadcastNoder* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oBroadcastNoder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oBroadcastNoder)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oBroadcastNoder)
    MergeFrom(*source);
  }
}

void oBroadcastNoder::MergeFrom(const oBroadcastNoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oBroadcastNoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    _internal_mutable_info()->::architecture::oReport::MergeFrom(from._internal_info());
  }
}

void oBroadcastNoder::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oBroadcastNoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oBroadcastNoder::CopyFrom(const oBroadcastNoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oBroadcastNoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oBroadcastNoder::IsInitialized() const {
  return true;
}

void oBroadcastNoder::InternalSwap(oBroadcastNoder* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata oBroadcastNoder::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oForwardClientMessage::_Internal {
 public:
};

oForwardClientMessage::oForwardClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oForwardClientMessage)
}
oForwardClientMessage::oForwardClientMessage(const oForwardClientMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  ::memcpy(&account_, &from.account_,
    static_cast<size_t>(reinterpret_cast<char*>(&protoid_) -
    reinterpret_cast<char*>(&account_)) + sizeof(protoid_));
  // @@protoc_insertion_point(copy_constructor:architecture.oForwardClientMessage)
}

void oForwardClientMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_oForwardClientMessage_Architecture_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&account_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&protoid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(protoid_));
}

oForwardClientMessage::~oForwardClientMessage() {
  // @@protoc_insertion_point(destructor:architecture.oForwardClientMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oForwardClientMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void oForwardClientMessage::ArenaDtor(void* object) {
  oForwardClientMessage* _this = reinterpret_cast< oForwardClientMessage* >(object);
  (void)_this;
}
void oForwardClientMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oForwardClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oForwardClientMessage& oForwardClientMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oForwardClientMessage_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oForwardClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oForwardClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protoid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(protoid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oForwardClientMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 protoid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          protoid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 account = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          account_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oForwardClientMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oForwardClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 protoid = 1;
  if (this->protoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_protoid(), target);
  }

  // int64 account = 2;
  if (this->account() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_account(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oForwardClientMessage)
  return target;
}

size_t oForwardClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oForwardClientMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int64 account = 2;
  if (this->account() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_account());
  }

  // int32 protoid = 1;
  if (this->protoid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_protoid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oForwardClientMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oForwardClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const oForwardClientMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oForwardClientMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oForwardClientMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oForwardClientMessage)
    MergeFrom(*source);
  }
}

void oForwardClientMessage::MergeFrom(const oForwardClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oForwardClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.account() != 0) {
    _internal_set_account(from._internal_account());
  }
  if (from.protoid() != 0) {
    _internal_set_protoid(from._internal_protoid());
  }
}

void oForwardClientMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oForwardClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oForwardClientMessage::CopyFrom(const oForwardClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oForwardClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oForwardClientMessage::IsInitialized() const {
  return true;
}

void oForwardClientMessage::InternalSwap(oForwardClientMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(oForwardClientMessage, protoid_)
      + sizeof(oForwardClientMessage::protoid_)
      - PROTOBUF_FIELD_OFFSET(oForwardClientMessage, account_)>(
          reinterpret_cast<char*>(&account_),
          reinterpret_cast<char*>(&other->account_));
}

::PROTOBUF_NAMESPACE_ID::Metadata oForwardClientMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oSendMessageToClient::_Internal {
 public:
};

oSendMessageToClient::oSendMessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oSendMessageToClient)
}
oSendMessageToClient::oSendMessageToClient(const oSendMessageToClient& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArena());
  }
  ::memcpy(&account_, &from.account_,
    static_cast<size_t>(reinterpret_cast<char*>(&protoid_) -
    reinterpret_cast<char*>(&account_)) + sizeof(protoid_));
  // @@protoc_insertion_point(copy_constructor:architecture.oSendMessageToClient)
}

void oSendMessageToClient::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_oSendMessageToClient_Architecture_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&account_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&protoid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(protoid_));
}

oSendMessageToClient::~oSendMessageToClient() {
  // @@protoc_insertion_point(destructor:architecture.oSendMessageToClient)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oSendMessageToClient::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void oSendMessageToClient::ArenaDtor(void* object) {
  oSendMessageToClient* _this = reinterpret_cast< oSendMessageToClient* >(object);
  (void)_this;
}
void oSendMessageToClient::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oSendMessageToClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oSendMessageToClient& oSendMessageToClient::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oSendMessageToClient_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oSendMessageToClient::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oSendMessageToClient)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  ::memset(&account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protoid_) -
      reinterpret_cast<char*>(&account_)) + sizeof(protoid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oSendMessageToClient::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 protoid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          protoid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 account = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          account_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oSendMessageToClient::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oSendMessageToClient)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 protoid = 1;
  if (this->protoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_protoid(), target);
  }

  // int64 account = 2;
  if (this->account() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_account(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oSendMessageToClient)
  return target;
}

size_t oSendMessageToClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oSendMessageToClient)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int64 account = 2;
  if (this->account() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_account());
  }

  // int32 protoid = 1;
  if (this->protoid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_protoid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oSendMessageToClient::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oSendMessageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  const oSendMessageToClient* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oSendMessageToClient>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oSendMessageToClient)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oSendMessageToClient)
    MergeFrom(*source);
  }
}

void oSendMessageToClient::MergeFrom(const oSendMessageToClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oSendMessageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.account() != 0) {
    _internal_set_account(from._internal_account());
  }
  if (from.protoid() != 0) {
    _internal_set_protoid(from._internal_protoid());
  }
}

void oSendMessageToClient::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oSendMessageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oSendMessageToClient::CopyFrom(const oSendMessageToClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oSendMessageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oSendMessageToClient::IsInitialized() const {
  return true;
}

void oSendMessageToClient::InternalSwap(oSendMessageToClient* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(oSendMessageToClient, protoid_)
      + sizeof(oSendMessageToClient::protoid_)
      - PROTOBUF_FIELD_OFFSET(oSendMessageToClient, account_)>(
          reinterpret_cast<char*>(&account_),
          reinterpret_cast<char*>(&other->account_));
}

::PROTOBUF_NAMESPACE_ID::Metadata oSendMessageToClient::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oLocation::_Internal {
 public:
};

oLocation::oLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oLocation)
}
oLocation::oLocation(const oLocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:architecture.oLocation)
}

void oLocation::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

oLocation::~oLocation() {
  // @@protoc_insertion_point(destructor:architecture.oLocation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oLocation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void oLocation::ArenaDtor(void* object) {
  oLocation* _this = reinterpret_cast< oLocation* >(object);
  (void)_this;
}
void oLocation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oLocation& oLocation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oLocation_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oLocation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oLocation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .architecture.eLocationType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::architecture::eLocationType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oLocation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oLocation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // .architecture.eLocationType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oLocation)
  return target;
}

size_t oLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oLocation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // .architecture.eLocationType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oLocation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const oLocation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oLocation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oLocation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oLocation)
    MergeFrom(*source);
  }
}

void oLocation::MergeFrom(const oLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void oLocation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oLocation::CopyFrom(const oLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oLocation::IsInitialized() const {
  return true;
}

void oLocation::InternalSwap(oLocation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(oLocation, type_)
      + sizeof(oLocation::type_)
      - PROTOBUF_FIELD_OFFSET(oLocation, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata oLocation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class oShutdown::_Internal {
 public:
};

oShutdown::oShutdown(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:architecture.oShutdown)
}
oShutdown::oShutdown(const oShutdown& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:architecture.oShutdown)
}

void oShutdown::SharedCtor() {
}

oShutdown::~oShutdown() {
  // @@protoc_insertion_point(destructor:architecture.oShutdown)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void oShutdown::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void oShutdown::ArenaDtor(void* object) {
  oShutdown* _this = reinterpret_cast< oShutdown* >(object);
  (void)_this;
}
void oShutdown::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void oShutdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const oShutdown& oShutdown::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_oShutdown_Architecture_2eproto.base);
  return *internal_default_instance();
}


void oShutdown::Clear() {
// @@protoc_insertion_point(message_clear_start:architecture.oShutdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* oShutdown::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* oShutdown::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:architecture.oShutdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:architecture.oShutdown)
  return target;
}

size_t oShutdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:architecture.oShutdown)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void oShutdown::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:architecture.oShutdown)
  GOOGLE_DCHECK_NE(&from, this);
  const oShutdown* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<oShutdown>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:architecture.oShutdown)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:architecture.oShutdown)
    MergeFrom(*source);
  }
}

void oShutdown::MergeFrom(const oShutdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:architecture.oShutdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void oShutdown::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:architecture.oShutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void oShutdown::CopyFrom(const oShutdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:architecture.oShutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool oShutdown::IsInitialized() const {
  return true;
}

void oShutdown::InternalSwap(oShutdown* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata oShutdown::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace architecture
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::architecture::oAddress* Arena::CreateMaybeMessage< ::architecture::oAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oReport* Arena::CreateMaybeMessage< ::architecture::oReport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oReport >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oAssigneID* Arena::CreateMaybeMessage< ::architecture::oAssigneID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oAssigneID >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oNoderInited* Arena::CreateMaybeMessage< ::architecture::oNoderInited >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oNoderInited >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oBroadcastNoder* Arena::CreateMaybeMessage< ::architecture::oBroadcastNoder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oBroadcastNoder >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oForwardClientMessage* Arena::CreateMaybeMessage< ::architecture::oForwardClientMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oForwardClientMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oSendMessageToClient* Arena::CreateMaybeMessage< ::architecture::oSendMessageToClient >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oSendMessageToClient >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oLocation* Arena::CreateMaybeMessage< ::architecture::oLocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oLocation >(arena);
}
template<> PROTOBUF_NOINLINE ::architecture::oShutdown* Arena::CreateMaybeMessage< ::architecture::oShutdown >(Arena* arena) {
  return Arena::CreateMessageInternal< ::architecture::oShutdown >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
